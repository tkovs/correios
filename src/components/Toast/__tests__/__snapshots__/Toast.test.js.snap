// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toast component should be invisible and clear the feedback by clicking the Ok! button 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />
</View>
`;

exports[`Toast component should be invisible and clear the feedback by clicking the Ok! button 2`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <SafeAreaView
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityLiveRegion="polite"
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 4,
            "elevation": 6,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 8,
            "opacity": 0,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 5,
              "width": 0,
            },
            "shadowOpacity": 0.24,
            "shadowRadius": 6,
            "transform": Array [
              Object {
                "scale": 0.9,
              },
            ],
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "marginLeft": 16,
                  "marginVertical": 14,
                },
                Object {
                  "color": "#ffffff",
                  "marginRight": 0,
                },
              ],
            ]
          }
        >
          mockMessage
        </Text>
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "marginHorizontal": 8,
              "marginVertical": 6,
              "minWidth": "auto",
            }
          }
        >
          <TouchableHighlight
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            activeOpacity={0.85}
            delayPressIn={0}
            delayPressOut={100}
            disabled={false}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
            underlayColor="rgba(3, 218, 196, 0.16)"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "#03dac4",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Ok!
              </Text>
            </View>
          </TouchableHighlight>
        </View>
      </View>
    </SafeAreaView>
  </View>
</View>
`;

exports[`Toast component should be invisible and clear the feedback by clicking the Ok! button 3`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />
</View>
`;

exports[`Toast component should react correctly to feedback changes 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />
</View>
`;

exports[`Toast component should react correctly to feedback changes 2`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <SafeAreaView
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityLiveRegion="polite"
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 4,
            "elevation": 6,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 8,
            "opacity": 0,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 5,
              "width": 0,
            },
            "shadowOpacity": 0.24,
            "shadowRadius": 6,
            "transform": Array [
              Object {
                "scale": 0.9,
              },
            ],
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "marginLeft": 16,
                  "marginVertical": 14,
                },
                Object {
                  "color": "#ffffff",
                  "marginRight": 0,
                },
              ],
            ]
          }
        >
          mockMessage
        </Text>
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "marginHorizontal": 8,
              "marginVertical": 6,
              "minWidth": "auto",
            }
          }
        >
          <TouchableHighlight
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            activeOpacity={0.85}
            delayPressIn={0}
            delayPressOut={100}
            disabled={false}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
            underlayColor="rgba(3, 218, 196, 0.16)"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "#03dac4",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Ok!
              </Text>
            </View>
          </TouchableHighlight>
        </View>
      </View>
    </SafeAreaView>
  </View>
</View>
`;

exports[`Toast component should react correctly to feedback changes 3`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />
</View>
`;
